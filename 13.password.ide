// Tools >> Manage Libraries >> Search for "Keypad"
#include <Keypad.h>

const byte NROWS = 4;
const byte NCOLS = 4;
const byte rowPins[NROWS] = { 5, 4, 3, 2 };  // decreasing to match keypad's key layout
const byte colPins[NCOLS] = { 6, 7, 8, 9 };
const char keyMap[NROWS][NCOLS] = {
  { '1', '2', '3', 'A' },
  { '4', '5', '6', 'B' },
  { '7', '8', '9', 'C' },
  { '*', '0', '#', 'D' }
};

const byte PASSWORD_LENGTH = 4;
char password[PASSWORD_LENGTH] = { '0', '0', '0', '0' };

Keypad *keypad = new Keypad(makeKeymap(keyMap), rowPins, colPins, NROWS, NCOLS);

void setup() {
  Serial.begin(9600);
  Serial.println("\nHit * to change the password OR # to unlock the system");
}

void loop() {
  char option = nextKeyPress();
  switch (option) {
      case '*':
        changePassword();
        break;
      case '#':
        signIn();
        break;
      default:
        Serial.print("ðŸ¤·");
        Serial.println(option);
        break;
    }
}

void changePassword() {
  Serial.println("\n> CHANGE PASSWORD");
  delay(500);
  int access = promptForPassword();
  printAccess(access);
  if (access >= 0) {
    setNewPassword();
  }
}

void signIn() {
  Serial.println("\n> SIGN IN");
  delay(500);
  int access = promptForPassword();
  printAccess(access);
}

// return < 0 if denied and >= 0 if granted
int promptForPassword() {
  Serial.println("Type your current password: ");
  int result = 1;
  for (int i = 0; i < PASSWORD_LENGTH; i++) {
    if (password[i] != nextKeyPress()) {
      result = -1;  // don't return here or one could reverse engineer the password
    }
    Serial.print("*");
  }
  return result;
}

void setNewPassword() {
  Serial.print("Enter new password: ");
  int result = 1;
  for (int i = 0; i < PASSWORD_LENGTH; i++) {
    password[i] = nextKeyPress();
    Serial.print("*");
  }
  Serial.println("\nPassword changed successfully!");
}

char nextKeyPress() {
  char symbol = 0;
  while (!symbol) {
    symbol = keypad->getKey();
  }
  return symbol;
}

void printAccess(int accessStatus) {
  if (accessStatus < 0) {
    Serial.println("\nBAD PASSWORD");
  } else {
    Serial.println("\nAccess granted");
  }
}